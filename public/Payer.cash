pragma cashscript ^0.6.3;

/**
 * @param: Pub key controlling the contract.
 */
contract Payer(pubkey ownerPk) {
    // The owner can make the transactions from this contract like any other wallet
    // without a risk of ending a contract unexpectedly.
    function spend(sig s) {
        require(checkSig(s, ownerPk));
    }
     
    /**
    * To send the funds to a contract which is controlled by both the owner of this contract
    * as well as the recipient.
    *
    * @param: s: Signature of the the owner of this contract.
    * @param: minerFee: Used in spending this contract.
    * @param: agreementScriptHash: Amount to be sent to the recipient contract
    */
    function allow(
            sig s,
            int minerFee,
            bytes20 agreementScriptHash
        ){
        // Make sure that the owner is giving the allowance to the recipient by checking the signature.
        require(checkSig(s, ownerPk));
        int changeAmount = int(bytes(tx.value)) - minerFee;
        bytes32 output = new OutputP2SH(bytes8(changeAmount), agreementScriptHash);
        require(tx.hashOutputs == hash256(output));
    }
}